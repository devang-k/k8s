"""/***************************************************************************  
 * Copyright Â© 2024 SiClarity, Inc.  
 * All rights reserved.  
 *  
 * File Name: protobuf_stream_pb2_grpc.py  
 * Description:Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!  
 *  
 * Author: Mansi Mahadik 
 * Created On: 17-12-2024
 *  
 * This source code and associated materials are the property of SiClarity, Inc.  
 * Unauthorized copying, modification, distribution, or use of this software,  
 * in whole or in part, is strictly prohibited without prior written permission  
 * from SiClarity, Inc.  
 *  
 * Disclaimer:  
 * This software is provided "as is," without any express or implied warranties,  
 * including but not limited to warranties of merchantability, fitness for a  
 * particular purpose, or non-infringement. In no event shall SiClarity, Inc.  
 * be held liable for any damages arising from the use of this software.  
 *  
 * SiClarity and its logo are trademarks of SiClarity, Inc.  
 *  
 * For inquiries, contact: support@siclarity.com  
 ***************************************************************************/"""
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.Apps.project.MLRunner.grpc import protobuf_stream_pb2 as protobuf__stream__pb2
class SiVistaLayoutStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LayoutGen = channel.unary_stream(
                '/layout.SiVistaLayout/LayoutGen',
                request_serializer=protobuf__stream__pb2.LayoutGenRequest.SerializeToString,
                response_deserializer=protobuf__stream__pb2.SiVistaResponse.FromString,
                )
        self.Hyperexpressivity = channel.unary_stream(
                '/layout.SiVistaLayout/Hyperexpressivity',
                request_serializer=protobuf__stream__pb2.HyperexpressivityRequest.SerializeToString,
                response_deserializer=protobuf__stream__pb2.SiVistaResponse.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/layout.SiVistaLayout/GetVersion',
                request_serializer=protobuf__stream__pb2.Empty.SerializeToString,
                response_deserializer=protobuf__stream__pb2.SiVistaResponse.FromString,
                )


class SiVistaLayoutServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LayoutGen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Hyperexpressivity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SiVistaLayoutServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LayoutGen': grpc.unary_stream_rpc_method_handler(
                    servicer.LayoutGen,
                    request_deserializer=protobuf__stream__pb2.LayoutGenRequest.FromString,
                    response_serializer=protobuf__stream__pb2.SiVistaResponse.SerializeToString,
            ),
            'Hyperexpressivity': grpc.unary_stream_rpc_method_handler(
                    servicer.Hyperexpressivity,
                    request_deserializer=protobuf__stream__pb2.HyperexpressivityRequest.FromString,
                    response_serializer=protobuf__stream__pb2.SiVistaResponse.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=protobuf__stream__pb2.Empty.FromString,
                    response_serializer=protobuf__stream__pb2.SiVistaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'layout.SiVistaLayout', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SiVistaLayout(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LayoutGen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/layout.SiVistaLayout/LayoutGen',
            protobuf__stream__pb2.LayoutGenRequest.SerializeToString,
            protobuf__stream__pb2.SiVistaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Hyperexpressivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/layout.SiVistaLayout/Hyperexpressivity',
            protobuf__stream__pb2.HyperexpressivityRequest.SerializeToString,
            protobuf__stream__pb2.SiVistaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/layout.SiVistaLayout/GetVersion',
            protobuf__stream__pb2.Empty.SerializeToString,
            protobuf__stream__pb2.SiVistaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
